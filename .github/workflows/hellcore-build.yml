name: Build and Release HellCore Launcher

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"   # Trigger workflow when pushing version tags like v0.0.1-alpha

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest]

    steps:
      - name: Checkout HellCore Launcher
        uses: actions/checkout@v4
        with:
          repository: hell-core/hellcore-launcher
          ref: master
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 1

      # Linux system dependencies
      - name: Install dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --fix-missing \
            libgtk-3-dev \
            libglib2.0-dev \
            pkg-config \
            build-essential \
            libssl-dev \
            libdbus-1-dev \
            libgdk-pixbuf2.0-dev \
            libwebkit2gtk-4.1-dev \
            libsoup-3.0-dev

      # Node.js setup
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # pnpm setup
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.3.0
          run_install: false

      # pnpm cache
      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store/v3
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      # Rust + Cargo cache (important for Windows builds)
      - name: Cache Cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      # Install project dependencies
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # Build Tauri app
      - name: Build HellCore app
        run: pnpm tauri build
        env:
          NEXT_PUBLIC_MICROSOFT_CLIENT_ID: ${{ secrets.MICROSOFT_CLIENT_ID }}

      # Upload artifacts to GitHub release
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "HellCore Launcher ${{ github.ref_name }}"
          draft: false
          prerelease: true
          overwrite_files: true
          files: |
            ${{ runner.os == 'Linux' && 'src-tauri/target/release/bundle/deb/*.deb' || '' }}
            ${{ runner.os == 'Linux' && 'src-tauri/target/release/bundle/rpm/*.rpm' || '' }}
            ${{ runner.os == 'Linux' && 'src-tauri/target/release/bundle/hellcore' || '' }}
            ${{ runner.os == 'Linux' && 'src-tauri/target/release/bundle/HellCore.desktop' || '' }}
            ${{ runner.os == 'Windows' && 'src-tauri/target/release/bundle/msi/*.msi' || '' }}
            ${{ runner.os == 'Windows' && 'src-tauri/target/release/bundle/nsis/*.exe' || '' }}
